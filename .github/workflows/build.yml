name: Build and Upload APK

on:
  workflow_dispatch:
    {}

jobs:
  build:
    name: Build APK
    runs-on: self-hosted  # Use the self-hosted runner

    steps:
      - name: Update Perms
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chmod -R 776 ../Sudoku

      - name: Setting Ownership
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chown -R connor:connor ../Sudoku

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Create Properties File
        id: create_prop_file
        shell: bash
        run: |
          echo "sdk.dir=/home/connor/Android/Sdk" >> local.properties

      - name: Update gradlew Perms
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chmod 766 gradlew

      - name: Clean
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S ./gradlew clean

      - name: Build APK
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S ./gradlew assembleDebug

      - name: Rename APK to Sudoku.apk
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/Sudoku.apk

      # Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: SudokuApp
          path: app/build/outputs/apk/release/Sudoku.apk

      # Optional: Upload to Firebase (uncomment if needed)
      # - name: Deploy to Firebase
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     token: ${{ secrets.FIREBASE_AUTH_TOKEN }}
      #     groups: testers_group
      #     file: app/build/outputs/apk/release/app-release.apk

      # Optional: Upload to Google Play (uncomment if needed)
      # - name: Upload to Google Play
      #   uses: google-github-actions/upload-play-store-release@v1
      #   with:
      #     service-account-json: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      #     package-name: com.example.sudoku
      #     release-file: app/build/outputs/apk/release/app-release.apk

      - name: Clean up
        if: steps.create_prop_file == 'success'
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S rm local.properties
