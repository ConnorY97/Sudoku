name: Build and Create Release

on:
  workflow_dispatch:
    {}

jobs:
  build:
    name: Build APK
    runs-on: self-hosted  # Use the self-hosted runner

    env:
      APK_PATH: app/build/outputs/apk/debug/

    steps:
      - name: Update Perms
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chmod -R 776 ../Sudoku

      - name: Setting Ownership
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chown -R connor:connor ../Sudoku

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Create Properties File
        id: create_prop_file
        shell: bash
        run: |
          echo "sdk.dir=/home/connor/Android/Sdk" >> local.properties

      - name: Update gradlew Perms
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S chmod 766 gradlew

      - name: Clean
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S ./gradlew clean

      - name: Build APK
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S ./gradlew assembleDebug

      - name: Rename APK to Sudoku.apk
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S mv ${{ env.APK_PATH }}app-debug.apk ${{ env.APK_PATH }}Sudoku.apk

      - name: Get Latest Tag
        id: get_latest_tag
        shell: bash
        run: |
          # Fetch the latest tag or set a default
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v1.0-alpha")

          # Extract the numeric portion (e.g., the '1' in 'v1.1-alpha')
          BASE_VERSION=$(echo "$LATEST_TAG" | awk -F'[v.-]' '{print $3}' || echo "0")

          # Increment the version
          NEW_VERSION=$((BASE_VERSION + 1))

          # Construct the new tag
          NEW_TAG="v1.${NEW_VERSION}-alpha"

          # Export the new tag as an environment variable
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Get Commit Message
        shell: bash
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          automatic_release_tag: "v1.${{ env.NEW_VERSION }}-alpha"
          prerelease: true
          title: "${{ env.COMMIT_MSG }}"
          files: |
            ${{ env.APK_PATH }}Sudoku.apk

      - name: Clean up
        if: steps.create_prop_file.outcome == 'success'
        shell: bash
        run: |
          echo ${{ secrets.SUDO_PASS }} | sudo -S rm local.properties
